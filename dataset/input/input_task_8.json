{
    "zero-shot": "Write unit tests in Python for the following function.\n\nfrom typing import List\n\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n\n    \"\"\"\n\n    Check if in given list of numbers, are any two numbers closer to each other than given threshold.\n\n\n\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n\n    False\n\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n\n    True\n\n    \"\"\"\n\n    for idx, elem in enumerate(numbers):\n\n        for idx2, elem2 in enumerate(numbers):\n\n            if idx != idx2:\n\n                distance = abs(elem - elem2)\n\n                if distance < threshold:\n\n                    return True\n\n    return False",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\nfrom typing import List\n\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n\n    \"\"\"\n\n    Check if in given list of numbers, are any two numbers closer to each other than given threshold.\n\n\n\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n\n    False\n\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n\n    True\n\n    \"\"\"\n\n    for idx, elem in enumerate(numbers):\n\n        for idx2, elem2 in enumerate(numbers):\n\n            if idx != idx2:\n\n                distance = abs(elem - elem2)\n\n                if distance < threshold:\n\n                    return True\n\n    return False",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\nfrom typing import List\n\n\n\ndef has_close_elements(numbers: List[float], threshold: float) -> bool:\n\n    \"\"\"\n\n    Check if in given list of numbers, are any two numbers closer to each other than given threshold.\n\n\n\n    >>> has_close_elements([1.0, 2.0, 3.0], 0.5)\n\n    False\n\n    >>> has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)\n\n    True\n\n    \"\"\"\n\n    for idx, elem in enumerate(numbers):\n\n        for idx2, elem2 in enumerate(numbers):\n\n            if idx != idx2:\n\n                distance = abs(elem - elem2)\n\n                if distance < threshold:\n\n                    return True\n\n    return False"
}