{
    "zero-shot": "Write unit tests in Python for the following function.\n\nfrom typing import List, Tuple\n\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n\n    \n\n    \"\"\"\n\n    For a given list of integers, return a tuple consisting of the sum and the product of all the integers in the list.\n\n    An empty sum should be equal to 0, and an empty product should be equal to 1.\n\n    \n\n    >>> sum_product([])\n\n    (0, 1)\n\n    >>> sum_product([1, 2, 3, 4])\n\n    (10, 24)\n\n    \"\"\"\n\n\n\n    sum_value = 0\n\n    prod_value = 1\n\n    \n\n    for n in numbers:\n\n        sum_value += n\n\n        prod_value *= n\n\n    \n\n    return sum_value, prod_value\n\n",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\nfrom typing import List, Tuple\n\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n\n    \n\n    \"\"\"\n\n    For a given list of integers, return a tuple consisting of the sum and the product of all the integers in the list.\n\n    An empty sum should be equal to 0, and an empty product should be equal to 1.\n\n    \n\n    >>> sum_product([])\n\n    (0, 1)\n\n    >>> sum_product([1, 2, 3, 4])\n\n    (10, 24)\n\n    \"\"\"\n\n\n\n    sum_value = 0\n\n    prod_value = 1\n\n    \n\n    for n in numbers:\n\n        sum_value += n\n\n        prod_value *= n\n\n    \n\n    return sum_value, prod_value\n\n",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\nfrom typing import List, Tuple\n\n\n\ndef sum_product(numbers: List[int]) -> Tuple[int, int]:\n\n    \n\n    \"\"\"\n\n    For a given list of integers, return a tuple consisting of the sum and the product of all the integers in the list.\n\n    An empty sum should be equal to 0, and an empty product should be equal to 1.\n\n    \n\n    >>> sum_product([])\n\n    (0, 1)\n\n    >>> sum_product([1, 2, 3, 4])\n\n    (10, 24)\n\n    \"\"\"\n\n\n\n    sum_value = 0\n\n    prod_value = 1\n\n    \n\n    for n in numbers:\n\n        sum_value += n\n\n        prod_value *= n\n\n    \n\n    return sum_value, prod_value\n\n"
}