{
    "zero-shot": "Write unit tests in Python for the following function.\n\nclass Node: \n\n\tdef __init__(self, data): \n\n\t\tself.data = data \n\n\t\tself.left = None\n\n\t\tself.right = None\n\ndef max_height(node): \n\n\tif node is None: \n\n\t\treturn 0 ; \n\n\telse : \n\n\t\tleft_height = max_height(node.left) \n\n\t\tright_height = max_height(node.right) \n\n\t\tif (left_height > right_height): \n\n\t\t\treturn left_height+1\n\n\t\telse: \n\n\t\t\treturn right_height+1",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\nclass Node: \n\n\tdef __init__(self, data): \n\n\t\tself.data = data \n\n\t\tself.left = None\n\n\t\tself.right = None\n\ndef max_height(node): \n\n\tif node is None: \n\n\t\treturn 0 ; \n\n\telse : \n\n\t\tleft_height = max_height(node.left) \n\n\t\tright_height = max_height(node.right) \n\n\t\tif (left_height > right_height): \n\n\t\t\treturn left_height+1\n\n\t\telse: \n\n\t\t\treturn right_height+1",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\nclass Node: \n\n\tdef __init__(self, data): \n\n\t\tself.data = data \n\n\t\tself.left = None\n\n\t\tself.right = None\n\ndef max_height(node): \n\n\tif node is None: \n\n\t\treturn 0 ; \n\n\telse : \n\n\t\tleft_height = max_height(node.left) \n\n\t\tright_height = max_height(node.right) \n\n\t\tif (left_height > right_height): \n\n\t\t\treturn left_height+1\n\n\t\telse: \n\n\t\t\treturn right_height+1"
}