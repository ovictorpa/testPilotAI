{
    "zero-shot": "Write unit tests in Python for the following function.\n\ndef remove_Occ(s,ch): \n\n    for i in range(len(s)): \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    for i in range(len(s) - 1,-1,-1):  \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    return s ",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\ndef remove_Occ(s,ch): \n\n    for i in range(len(s)): \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    for i in range(len(s) - 1,-1,-1):  \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    return s ",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases and logic involved. Then write complete tests using unittest.\n\nFunction:\ndef remove_Occ(s,ch): \n\n    for i in range(len(s)): \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    for i in range(len(s) - 1,-1,-1):  \n\n        if (s[i] == ch): \n\n            s = s[0 : i] + s[i + 1:] \n\n            break\n\n    return s "
}