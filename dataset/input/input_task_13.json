{
    "zero-shot": "Write unit tests in Python for the following function.\n\ndef count_distinct_characters(string: str) -> int:\n\n    \n\n    \"\"\"\n\n    Given a string, find out how many distinct characters it consists of, regardless of case.\n\n    \n\n    >>> count_distinct_characters('xyzXYZ')\n\n    3\n\n    >>> count_distinct_characters('Jerry')\n\n    4\n\n    \"\"\"\n\n\n\n    return len(set(string.lower()))",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\ndef count_distinct_characters(string: str) -> int:\n\n    \n\n    \"\"\"\n\n    Given a string, find out how many distinct characters it consists of, regardless of case.\n\n    \n\n    >>> count_distinct_characters('xyzXYZ')\n\n    3\n\n    >>> count_distinct_characters('Jerry')\n\n    4\n\n    \"\"\"\n\n\n\n    return len(set(string.lower()))",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\ndef count_distinct_characters(string: str) -> int:\n\n    \n\n    \"\"\"\n\n    Given a string, find out how many distinct characters it consists of, regardless of case.\n\n    \n\n    >>> count_distinct_characters('xyzXYZ')\n\n    3\n\n    >>> count_distinct_characters('Jerry')\n\n    4\n\n    \"\"\"\n\n\n\n    return len(set(string.lower()))"
}