{
    "zero-shot": "Write unit tests in Python for the following function.\n\ndef binomial_Coeff(n,k): \n\n    C = [0] * (k + 1); \n\n    C[0] = 1; # nC0 is 1 \n\n    for i in range(1,n + 1):  \n\n        for j in range(min(i, k),0,-1): \n\n            C[j] = C[j] + C[j - 1]; \n\n    return C[k]; \n\ndef sum_Of_product(n): \n\n    return binomial_Coeff(2 * n,n - 1); ",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\ndef binomial_Coeff(n,k): \n\n    C = [0] * (k + 1); \n\n    C[0] = 1; # nC0 is 1 \n\n    for i in range(1,n + 1):  \n\n        for j in range(min(i, k),0,-1): \n\n            C[j] = C[j] + C[j - 1]; \n\n    return C[k]; \n\ndef sum_Of_product(n): \n\n    return binomial_Coeff(2 * n,n - 1); ",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\ndef binomial_Coeff(n,k): \n\n    C = [0] * (k + 1); \n\n    C[0] = 1; # nC0 is 1 \n\n    for i in range(1,n + 1):  \n\n        for j in range(min(i, k),0,-1): \n\n            C[j] = C[j] + C[j - 1]; \n\n    return C[k]; \n\ndef sum_Of_product(n): \n\n    return binomial_Coeff(2 * n,n - 1); "
}