{
    "zero-shot": "Write unit tests in Python for the following function.\n\nfrom typing import List\n\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n\n    \n\n    \"\"\"\n\n    For a given list of input numbers, calculate the Mean Absolute Deviation around the mean of this dataset.\n\n    \n\n    Mean Absolute Deviation (MAD) is the average absolute difference between each element and a centerpoint (mean in this case):\n\n    MAD = average |x - x_mean|\n\n    \n\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\n    1.0\n\n    \"\"\"\n\n\n\n    mean = sum(numbers) / len(numbers)\n\n    return sum(abs(x - mean) for x in numbers) / len(numbers)",
    "few-shot": "Write unit tests in Python for the following function. Here are some examples:\nExample of basic unit test:\ndef add(a, b): return a + b\n\nTest:\nimport unittest\nclass TestAdd(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(add(1, 2), 3)\n\nNow for the function:\nfrom typing import List\n\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n\n    \n\n    \"\"\"\n\n    For a given list of input numbers, calculate the Mean Absolute Deviation around the mean of this dataset.\n\n    \n\n    Mean Absolute Deviation (MAD) is the average absolute difference between each element and a centerpoint (mean in this case):\n\n    MAD = average |x - x_mean|\n\n    \n\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\n    1.0\n\n    \"\"\"\n\n\n\n    mean = sum(numbers) / len(numbers)\n\n    return sum(abs(x - mean) for x in numbers) / len(numbers)",
    "cot": "Write unit tests in Python for the following function. First, think step-by-step about the possible edge cases, scenarios, assertions and logic involved. Then write complete tests using unittest.\n\nFunction:\nfrom typing import List\n\n\n\ndef mean_absolute_deviation(numbers: List[float]) -> float:\n\n    \n\n    \"\"\"\n\n    For a given list of input numbers, calculate the Mean Absolute Deviation around the mean of this dataset.\n\n    \n\n    Mean Absolute Deviation (MAD) is the average absolute difference between each element and a centerpoint (mean in this case):\n\n    MAD = average |x - x_mean|\n\n    \n\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n\n    1.0\n\n    \"\"\"\n\n\n\n    mean = sum(numbers) / len(numbers)\n\n    return sum(abs(x - mean) for x in numbers) / len(numbers)"
}